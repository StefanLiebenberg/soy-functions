{namespace templates.date}


/**
 * @param Date
 * @param CompareTo
 */
{template .isAfter}
  {isAfter($Date, $CompareTo)}
{/template}


/**
 * @param Date
 * @param CompareTo
 */
{template .isBefore}
  {isBefore($Date, $CompareTo)}
{/template}

/**
 * This will always return false.
 */
{template .isBeforeAndAfterString}
  {isBefore('1487367930349', '1487367979650') and isAfter('1487367930349', '1487367979650')}
{/template}

/**
 * This will always return true.
 */
{template .isBeforeOrAfterString}
  {isBefore('1487367930349', '1487367979650') or isAfter('1487367930349', '1487367979650')}
{/template}


/**
 * This will always return false.
 */
{template .isBeforeAndAfterNumber}
  {isBefore(parseInt('1487367930349'), parseInt('1487367979650')) and isAfter(parseInt('1487367930349'), parseInt('1487367979650'))}
{/template}

/**
 * This will always return true.
 */
{template .isBeforeOrAfterNumber}
  {isBefore(parseInt('1487367930349'), parseInt('1487367979650')) or isAfter(parseInt('1487367930349'), parseInt('1487367979650'))}
{/template}


/**
 * This should be equivalent to Instant.now()
 */
{template .toInstant}
  {printTimestamp(toInstant())}
{/template}



/**
 * @param Timestamp
 */
{template .toInstantWithTimestamp}
  {printTimestamp(toInstant($Timestamp))}
{/template}






/**
 * @param Value
 */
{template .toDateTime}
  {toDateTime($Value)}
{/template}

/**
 * @param Value
 * @param Offset
 */
{template .toDateTimeWithOffset}
  {toDateTime($Value, $Offset)}
{/template}

/**
 * @param Date
 */
{template .printDate}
  {printDate($Date)}
{/template}

/**
 * @param Date
 * @param Format
 */
{template .printDateWithFormat}
  {printDate($Date, $Format)}
{/template}

/**
 * @param Date
 * @param Format
 * @param Offset
 */
{template .printDateWithFormatAndZoneOffset}
  {printDate($Date, $Format, $Offset)}
{/template}
